From 3f627492c2b57a0b6d510ce770461f841f5c568f Mon Sep 17 00:00:00 2001
From: "F. von Gellhorn" <flinux@vongellhorn.ch>
Date: Sun, 25 Apr 2021 20:02:00 +0200
Subject: [PATCH 1/1] fusermount: Support a stateless configuration

---
 util/fusermount.c | 23 +++++++++++++++--------
 1 file changed, 15 insertions(+), 8 deletions(-)

diff --git a/util/fusermount.c b/util/fusermount.c
index e738dbd..08498b5 100644
--- a/util/fusermount.c
+++ b/util/fusermount.c
@@ -35,6 +35,7 @@
 #define FUSE_COMMFD_ENV		"_FUSE_COMMFD"
 
 #define FUSE_DEV "/dev/fuse"
+#define SYSTEM_FUSE_CONF "/usr/share/defaults/fuse/fuse.conf"
 
 #ifndef MS_DIRSYNC
 #define MS_DIRSYNC 128
@@ -532,7 +533,7 @@ static void strip_line(char *line)
 		memmove(line, s, strlen(s)+1);
 }
 
-static void parse_line(char *line, int linenum)
+static void parse_line(char *conf_file, char *line, int linenum)
 {
 	int tmp;
 	if (strcmp(line, "user_allow_other") == 0)
@@ -542,12 +543,18 @@ static void parse_line(char *line, int linenum)
 	else if(line[0])
 		fprintf(stderr,
 			"%s: unknown parameter in %s at line %i: '%s'\n",
-			progname, FUSE_CONF, linenum, line);
+            progname, conf_file, linenum, line);
 }
 
 static void read_conf(void)
 {
-	FILE *fp = fopen(FUSE_CONF, "r");
+    const char *fuse_conf = NULL;
+    if (access(FUSE_CONF, F_OK) == 0) {
+        fuse_conf = FUSE_CONF; }
+    else {
+        fuse_conf = SYSTEM_FUSE_CONF; }
+
+	FILE *fp = fopen(fuse_conf, "r");
 	if (fp != NULL) {
 		int linenum = 1;
 		char line[256];
@@ -556,12 +563,12 @@ static void read_conf(void)
 			if (isnewline) {
 				if (line[strlen(line)-1] == '\n') {
 					strip_line(line);
-					parse_line(line, linenum);
+					parse_line(fuse_conf, line, linenum);
 				} else {
 					isnewline = 0;
 				}
 			} else if(line[strlen(line)-1] == '\n') {
-				fprintf(stderr, "%s: reading %s: line %i too long\n", progname, FUSE_CONF, linenum);
+				fprintf(stderr, "%s: reading %s: line %i too long\n", progname, fuse_conf, linenum);
 
 				isnewline = 1;
 			}
@@ -569,11 +576,11 @@ static void read_conf(void)
 				linenum ++;
 		}
 		if (!isnewline) {
-			fprintf(stderr, "%s: reading %s: missing newline at end of file\n", progname, FUSE_CONF);
+			fprintf(stderr, "%s: reading %s: missing newline at end of file\n", progname, fuse_conf);
 
 		}
 		if (ferror(fp)) {
-			fprintf(stderr, "%s: reading %s: read failed\n", progname, FUSE_CONF);
+			fprintf(stderr, "%s: reading %s: read failed\n", progname, fuse_conf);
 			exit(1);
 		}
 		fclose(fp);
@@ -582,7 +589,7 @@ static void read_conf(void)
 			      errno != ENAMETOOLONG && errno != ENOTDIR &&
 			      errno != EOVERFLOW);
 		fprintf(stderr, "%s: failed to open %s: %s\n",
-			progname, FUSE_CONF, strerror(errno));
+			progname, fuse_conf, strerror(errno));
 		if (fatal)
 			exit(1);
 	}
-- 
2.30.2

